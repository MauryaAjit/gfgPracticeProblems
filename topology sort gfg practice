class Solution {
    public static ArrayList<Integer> topoSort(int V, int[][] edges) {
        // code here
        ArrayList<Integer>[] adj = new ArrayList[V];
        for (int i = 0; i < V; i++) {
            adj[i] = new ArrayList<>();
        }
        for(int []edge:edges){
            adj[edge[0]].add(edge[1]);
        }
        Stack<Integer> st = new Stack<>();
        int[]vis = new int[V];
        ArrayList<Integer> res=new ArrayList<>();
        for(int i = 0 ;i<V; i++){
            if(vis[i]==0){
                dfs(i,adj,vis,st);
            }
        }
        while(! st.empty()){
            int a=st.peek();
            st.pop();
            res.add(a);
        }
        return res;
    }
    static void dfs(int node,ArrayList<Integer>[]adj,int[]vis,Stack<Integer> st){
        vis[node]= 1;
        for(int i:adj[node])
        {
            if(vis[i]==0)dfs(i,adj,vis,st);
        }
        st.push(node);
    }
} 
